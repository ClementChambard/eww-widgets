(defwindow powermenu
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
             :width "100%"
             :height "100%")
(powermenu_layout))

(defwidget _buttons [shutdown shutdown_icon reboot
                    reboot_icon logout logout_icon]
  (box :class "btns-box" :spacing 5
       :vexpand true :hexpand true
       :valign "end" :halign "end"
       :space-evenly false
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)))

(defwidget _network [strength offline excellent good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 8
    (label :text {strength == "" ? offline :
                  strength < 26 ? slow :
                  strength < 51 ? okay :
                  strength < 76 ? good : excellent})))

(defwidget _battery [battery status b1 b2 b3 b4 b5 b6 b7 charge]
  (box :class "bat-box" :space-evenly false :spacing 8
       :halign "end" :hexpand true
    (label :text {status == 'Charging' ? charge :
                  battery < 15 ? b7 :
                  battery < 30 ? b6 :
                  battery < 45 ? b5 :
                  battery < 60 ? b4 :
                  battery < 75 ? b3 :
                  battery < 95 ? b2 : b1})))

(defwidget powermenu_layout []
  (box :class "layout-box" :space-evenly false :orientation "vertical"
       :style "background-image: url('./wallpaper')"
    (box :valign "start" :space-evenly false :spacing 25
      (_battery :status {EWW_BATTERY.BAT1.status}
                :battery {EWW_BATTERY.BAT1.capacity}
                :charge "" :b1 "" :b2 "" :b3 "" :b4 "" :b5 "" :b6 "" :b7 "")
      (_network :strength net :offline "" :excellent "" :good ""
                :okay "" :slow "")
      (label :text "|" :class "sep")
      (button :onclick "eww -c /home/clement/.config/eww/powermenu close powermenu" :class "close-btn" ""))
    (box :space-evenly false :hexpand true :vexpand true
         :halign "start"
      (label :class "clock" :text "${time.hour}:${time.min}"))
    (_buttons :shutdown "poweroff" :reboot "reboot" :logout "pkill Hyprland"
              :shutdown_icon "" :reboot_icon "" :logout_icon "")))

(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`)

(defpoll net :interval "100s"
  :initial `N/A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`)
